\ null gr:new var, mygraph \ create a new graph
\ mygraph @ \ place on stack
\ mygraph @ "living room" gr:+node  \ add a node

0 var, current_node
[] var, available_items
[] var, inventory

\ set up graph (map) from datafile
needs datafile

with: datafile
  advtitle @ var, title
  title @ . cr \ Print title
  advmap @
  gr:new var, adventuremap      \ clean stack
  cr
  ;with

: look 
  \ -- 
  [] available_items ! \ clear items
  adventuremap @ gr:nodes current_node @ a:@ 
  \ fetch item at current node
  current_node @ m:@ "description" m:@ . cr \ get and print description
  "you can see: " . cr
  "items" m:@ dup ( . cr ) a:each \ Print each item in the items array
  drop drop drop   \ clear top of stack 
  available_items @ swap a:+ \ store found items in available_items
  2drop 2drop drop \ clear the stack
;

: find 
  \ item array --  bool (but needs work)
  false -rot                \ put false to bottom
  ( over s:= if "true"  break  \ bring item to TOS for comparison --> item bool 
                else
                then ) a:each!
  drop              \ drop array
  if 2drop "true"    \ put true on TOS
  then ;

: found
  find ;


: take
  \ item array
  over swap  \ get copy of item to bottom
  found if
        "You have a " . . cr
        else
        "There is no " . . " here." . cr  
        then ;

\ remove item from available items
\ add to inventory
\ copy available_items back to location items
\



: app:main 
  look
  "knife" available_items @ take
  bye
;










\ TODO set up console for I/O
\ TODO write movement 

